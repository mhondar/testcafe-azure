# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
- name: enviroment
  displayName: 'Seleccione Ambiente'  
  type: string
  default: prod
  values:
  - prod

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
  # Replace '10.14' with the latest Node.js LTS version
    versionSpec: '14.17.6'
  displayName: 'Install Node.js'
  
- script: npm install
  displayName: 'Install Dependencies'

- script: npm install --save-dev testcafe -g
  displayName: 'Install TestCafe'
  
- script: npm install --save testcafe-reporter-cucumber-json
  displayName: 'Install Reporter json '  

- script: npm install --save downloads-folder
  displayName: 'Install Downloads Folder' 

- script: npm install --save @ffmpeg-installer/ffmpeg
  displayName: 'Install ffmpeg Video Record' 
  
- script: ENV=${{ parameters.enviroment }} testcafe chrome:headless ./test --test-meta type=smog --skip-js-errors --video reports/videosReport --video-options failedOnly=true --reporter cucumber-json,xunit:report.xml --reporter-json-folder=reports/jsonReport
  displayName: 'Run TestCafe Tests'

- script: npm run report
  displayName: 'Multiple Cucumber HTML Report Generate'
    
- task: PublishTestResults@2
  condition: succeededOrFailed() 
  inputs:
    testResultsFiles: 'report.xml'
    testResultsFormat: 'JUnit'

- task: PublishCucumberReport@1
  condition: succeededOrFailed()
  displayName: 'Publish Cucumber Report'
  inputs:
    jsonDir: ./reports/jsonReport
    outputPath: ./reports
    theme: 'hierarchy'
    name: 'Reporte Prueba Smog'
    title: 'Reporte Prueba Smog'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/reports/htmlReport'
    artifactType: 'pipeline'
    artifactName: 'htmlReport'

- task: PublishPipelineArtifact@1
  condition: failed()
  displayName: 'Publish Video Record'
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/reports/videosReport'
    artifactType: 'pipeline'
    artifactName: 'videoRecord'

# - task: JakubRumpca.azure-pipelines-html-report.PublishHtmlReport.PublishHtmlReport@1
#   displayName: 'Publish HTML Report'
#   inputs:
#     reportDir: '$(Build.SourcesDirectory)/reports/htmlReport/index.html'

