# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: enviroment
  displayName: 'Seleccione Ambiente'  
  type: string
  default: prod
  values:
  - prod

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
  # Replace '10.14' with the latest Node.js LTS version
    versionSpec: '14.17.6'
  displayName: 'Install Node.js'
  
- script: npm install
  displayName: 'Install Dependencies'

- script: npm install --save-dev testcafe -g
  displayName: 'Install TestCafe'
  
- script: npm install --save testcafe-reporter-cucumber-json
  displayName: 'Install Reporter json '  

- script: npm install --save downloads-folder
  displayName: 'Install Downloads Folder'  

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Usuario" --skip-js-errors --reporter cucumber-json,xunit:report00.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Usuario'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Crear Pedido de Materiales" --test-meta problem=false --skip-js-errors --reporter cucumber-json,xunit:report01.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Crear Pedido de Materiales'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -t "TC-59598 Validar Creacion de un pedido de materiales" --skip-js-errors --reporter cucumber-json,xunit:report59598.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'TC-59598 Validar Creacion de un pedido de materiales'
  
- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -t "TC-59616 Validar creación de un pedido por la opción Maestro" --skip-js-errors --reporter cucumber-json,xunit:report59616.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'TC-59616 Validar creación de un pedido por la opción Maestro'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Administración de Pedido" --skip-js-errors --reporter cucumber-json,xunit:report02.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Administración de Pedido'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Envío Orden de Compra" --test-meta problem=false --skip-js-errors --reporter cucumber-json,xunit:report03.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Envío Orden de Compra'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -t "TC-60313 Validar Envío de orden" --skip-js-errors --reporter cucumber-json,xunit:report60313.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'TC-60313 Validar Envío de orden'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Enviar Cotización desde Pedido de Materiales" --skip-js-errors --reporter cucumber-json,xunit:report04.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Enviar Cotización desde Pedido de Materiales'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Aprobar Cotización desde lado Proveedor" --skip-js-errors --reporter cucumber-json,xunit:report05.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Aprobar Cotización desde lado Proveedor'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Enviar Cotización a Orden de Compra" --test-meta problem=false --skip-js-errors --reporter cucumber-json,xunit:report06.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Enviar Cotización a Orden de Compra'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -t "TC-61450 Validar Comprar Productos de una Cotización correctamente y sea Enviada a Compra" --skip-js-errors --reporter cucumber-json,xunit:report61450.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'TC-61450 Validar Comprar Productos de una Cotización correctamente y sea Enviada a Compra'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Aprobar Orden de Compra desde lado proveedor" --skip-js-errors --reporter cucumber-json,xunit:report07.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Aprobar Orden de Compra desde lado proveedor'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Recepción" --skip-js-errors --reporter cucumber-json,xunit:report08.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Recepción'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Facturación" --skip-js-errors --reporter cucumber-json,xunit:report09.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Facturación'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Nota de Corrección" --skip-js-errors --reporter cucumber-json,xunit:report10.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Nota de Corrección'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Reversa Nota de Corrección" --skip-js-errors --reporter cucumber-json,xunit:report11.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Reversa Nota de Corrección'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Reversa Facturación" --skip-js-errors --reporter cucumber-json,xunit:report12.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Reversa Facturación'

- script: ENV=${{ parameters.enviroment }}  testcafe chrome:headless ./test/SCM -f "Suite Pruebas iConstruye Reversa Recepción" --skip-js-errors --reporter cucumber-json,xunit:report13.xml --reporter-json-folder=reports/jsonReport
  condition: succeededOrFailed()
  displayName: 'Suite Pruebas iConstruye Reversa Recepción' 

- script: npm run report
  condition: succeededOrFailed()
  displayName: 'Multiple Cucumber HTML Report Generate'
    
- task: PublishTestResults@2
  condition: succeededOrFailed() 
  inputs:
    testResultsFiles: 'report*.xml'
    testResultsFormat: 'JUnit'
    
- task: PublishCucumberReport@1
  condition: succeededOrFailed()
  displayName: 'Publish Cucumber Report'
  inputs:
    jsonDir: ./reports/jsonReport
    outputPath: ./reports
    theme: hierarchy
    name: 'Reporte de Pruebas Automaticas en SCM'
    title: 'Reporte de Pruebas Automaticas en SCM'

- task: PublishPipelineArtifact@1
  condition: succeededOrFailed()
  displayName: 'Publish HTML Report'
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/reports/htmlReport'
    artifactType: 'pipeline'
    artifactName: 'htmlReport'

schedules:
  - cron: "0 9 * * *"
    displayName: Daily Test Execution
    branches:
      include:
      - master
    always: true
